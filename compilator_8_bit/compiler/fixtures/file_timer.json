[
{
    "model": "compiler.file",
    "pk": 2,
    "fields": {
        "name": "timer_interrupt.c",
        "description": "",
        "create_date": "2023-05-02T14:43:43.603Z",
        "user": 1,
        "enabled": true,
        "enable_update_date": null,
        "update_date": "2023-05-02T14:43:43.603Z",
        "folder": 1,
        "source_code": "/*\n * Blink a LED every second using timer TIM2 and its Update/Overflow interrupt\n */\n#include <stdint.h>\n\n/*\n * Register definitions for STM8S103 (and STM8S003)\n * Still incomplete.\n */\n#ifndef _STH8_H\n#define _STH8_H\n\n\n/* Handy macros for GPIO */\n#define CONCAT(a, b)    a##_##b\n#define PORT(a, b)      CONCAT(a , b)\n\n#define PIN0    (1 << 0)\n#define PIN1    (1 << 1)\n#define PIN2    (1 << 2)\n#define PIN3    (1 << 3)\n#define PIN4    (1 << 4)\n#define PIN5    (1 << 5)\n#define PIN6    (1 << 6)\n#define PIN7    (1 << 7)\n\n/* Register addresses */\n\n/* Clock */\n#define CLK_CKDIVR\t*(volatile unsigned char *)0x50C6\n\n/* GPIO */\n#define PA_ODR *(volatile unsigned char *)0x5000\n#define PA_IDR *(volatile unsigned char *)0x5001\n#define PA_DDR *(volatile unsigned char *)0x5002\n#define PA_CR1 *(volatile unsigned char *)0x5003\n#define PA_CR2 *(volatile unsigned char *)0x5004\n\n#define PB_ODR *(volatile unsigned char *)0x5005\n#define PB_IDR *(volatile unsigned char *)0x5006\n#define PB_DDR *(volatile unsigned char *)0x5007\n#define PB_CR1 *(volatile unsigned char *)0x5008\n#define PB_CR2 *(volatile unsigned char *)0x5009\n\n#define PC_ODR *(volatile unsigned char *)0x500A\n#define PC_IDR *(volatile unsigned char *)0x500B\n#define PC_DDR *(volatile unsigned char *)0x500C\n#define PC_CR1 *(volatile unsigned char *)0x500D\n#define PC_CR2 *(volatile unsigned char *)0x500E\n\n#define PD_ODR *(volatile unsigned char *)0x500F\n#define PD_IDR *(volatile unsigned char *)0x5010\n#define PD_DDR *(volatile unsigned char *)0x5011\n#define PD_CR1 *(volatile unsigned char *)0x5012\n#define PD_CR2 *(volatile unsigned char *)0x5013\n\n/* UART */\n#define UART1_SR *(volatile unsigned char *)0x5230\n#define UART1_DR *(volatile unsigned char *)0x5231\n#define UART1_BRR1 *(volatile unsigned char *)0x5232\n#define UART1_BRR2 *(volatile unsigned char *)0x5233\n#define UART1_CR1 *(volatile unsigned char *)0x5234\n#define UART1_CR2 *(volatile unsigned char *)0x5235\n#define UART1_CR3 *(volatile unsigned char *)0x5236\n#define UART1_CR4 *(volatile unsigned char *)0x5237\n#define UART1_CR5 *(volatile unsigned char *)0x5238\n#define UART1_GTR *(volatile unsigned char *)0x5239\n#define UART1_PSCR *(volatile unsigned char *)0x523A\n\n#define UART_SR_TXE (1 << 7)\n#define UART_SR_TC (1 << 6)\n#define UART_SR_RXNE (1 << 5)\n#define UART_SR_IDLE (1 << 4)\n#define UART_SR_OR (1 << 3)\n#define UART_SR_NF (1 << 2)\n#define UART_SR_FE (1 << 1)\n#define UART_SR_PE (1 << 0)\n\n#define UART_CR1_R8 (1 << 7)\n#define UART_CR1_T8 (1 << 6)\n#define UART_CR1_UARTD (1 << 5)\n#define UART_CR1_M (1 << 4)\n#define UART_CR1_WAKE (1 << 3)\n#define UART_CR1_PCEN (1 << 2)\n#define UART_CR1_PS (1 << 1)\n#define UART_CR1_PIEN (1 << 0)\n\n#define UART_CR2_TIEN (1 << 7)\n#define UART_CR2_TCIEN (1 << 6)\n#define UART_CR2_RIEN (1 << 5)\n#define UART_CR2_ILIEN (1 << 4)\n#define UART_CR2_TEN (1 << 3)\n#define UART_CR2_REN (1 << 2)\n#define UART_CR2_RWU (1 << 1)\n#define UART_CR2_SBK (1 << 0)\n\n#define UART_CR3_LINEN (1 << 6)\n#define UART_CR3_STOP2 (1 << 5)\n#define UART_CR3_STOP1 (1 << 4)\n#define UART_CR3_CLKEN (1 << 3)\n#define UART_CR3_CPOL (1 << 2)\n#define UART_CR3_CPHA (1 << 1)\n#define UART_CR3_LBCL (1 << 0)\n\n/* Timers */\n#define TIM1_CR1 *(volatile unsigned char *)0x5250\n#define TIM1_CR2 *(volatile unsigned char *)0x5251\n#define TIM1_SMCR *(volatile unsigned char *)0x5252\n#define TIM1_ETR *(volatile unsigned char *)0x5253\n#define TIM1_IER *(volatile unsigned char *)0x5254\n#define TIM1_SR1 *(volatile unsigned char *)0x5255\n#define TIM1_SR2 *(volatile unsigned char *)0x5256\n#define TIM1_EGR *(volatile unsigned char *)0x5257\n#define TIM1_CCMR1 *(volatile unsigned char *)0x5258\n#define TIM1_CCMR2 *(volatile unsigned char *)0x5259\n#define TIM1_CCMR3 *(volatile unsigned char *)0x525A\n#define TIM1_CCMR4 *(volatile unsigned char *)0x525B\n#define TIM1_CCER1 *(volatile unsigned char *)0x525C\n#define TIM1_CCER2 *(volatile unsigned char *)0x525D\n#define TIM1_CNTRH *(volatile unsigned char *)0x525E\n#define TIM1_CNTRL *(volatile unsigned char *)0x525F\n#define TIM1_PSCRH *(volatile unsigned char *)0x5260\n#define TIM1_PSCRL *(volatile unsigned char *)0x5261\n#define TIM1_ARRH *(volatile unsigned char *)0x5262\n#define TIM1_ARRL *(volatile unsigned char *)0x5263\n#define TIM1_RCR *(volatile unsigned char *)0x5264\n#define TIM1_CCR1H *(volatile unsigned char *)0x5265\n#define TIM1_CCR1L *(volatile unsigned char *)0x5266\n#define TIM1_CCR2H *(volatile unsigned char *)0x5267\n#define TIM1_CCR2L *(volatile unsigned char *)0x5268\n#define TIM1_CCR3H *(volatile unsigned char *)0x5269\n#define TIM1_CCR3L *(volatile unsigned char *)0x526A\n#define TIM1_CCR4H *(volatile unsigned char *)0x526B\n#define TIM1_CCR4L *(volatile unsigned char *)0x526C\n#define TIM1_BKR *(volatile unsigned char *)0x526D\n#define TIM1_DTR *(volatile unsigned char *)0x526E\n#define TIM1_OISR *(volatile unsigned char *)0x526F\n\n/* Note these are for STM8S103 and STM8S003\n   STM8S105,104/207/208 are different */\n#define TIM2_CR1 *(volatile unsigned char *)0x5300\n#define TIM2_CR2 *(volatile unsigned char *)0x5301\n#define TIM2_SMCR *(volatile unsigned char *)0x5302\n#define TIM2_IER *(volatile unsigned char *)0x5303\n#define TIM2_SR1 *(volatile unsigned char *)0x5304\n#define TIM2_SR2 *(volatile unsigned char *)0x5305\n#define TIM2_EGR *(volatile unsigned char *)0x5306\n#define TIM2_CCMR1 *(volatile unsigned char *)0x5307\n#define TIM2_CCMR2 *(volatile unsigned char *)0x5308\n#define TIM2_CCMR3 *(volatile unsigned char *)0x5309\n#define TIM2_CCER1 *(volatile unsigned char *)0x530A\n#define TIM2_CCER2 *(volatile unsigned char *)0x530B\n#define TIM2_CNTRH *(volatile unsigned char *)0x530C\n#define TIM2_CNTRL *(volatile unsigned char *)0x530D\n#define TIM2_PSCR *(volatile unsigned char *)0x530E\n#define TIM2_ARRH *(volatile unsigned char *)0x530F\n#define TIM2_ARRL *(volatile unsigned char *)0x5310\n#define TIM2_CCR1H *(volatile unsigned char *)0x5311\n#define TIM2_CCR1L *(volatile unsigned char *)0x5312\n#define TIM2_CCR2H *(volatile unsigned char *)0x5313\n#define TIM2_CCR2L *(volatile unsigned char *)0x5314\n#define TIM2_CCR3H *(volatile unsigned char *)0x5315\n#define TIM2_CCR3L *(volatile unsigned char *)0x5316\n\n/* Note these are for STM8S103 and STM8S003\n   STM8S105,104/207/208 are different */\n#define TIM4_CR1 *(volatile unsigned char *)0x5340\n#define TIM4_CR2 *(volatile unsigned char *)0x5341\n#define TIM4_SMCR *(volatile unsigned char *)0x5342\n#define TIM4_IER *(volatile unsigned char *)0x5343\n#define TIM4_SR *(volatile unsigned char *)0x5344\n#define TIM4_EGR *(volatile unsigned char *)0x5345\n#define TIM4_CNTR *(volatile unsigned char *)0x5346\n#define TIM4_PSCR *(volatile unsigned char *)0x5347\n#define TIM4_ARR *(volatile unsigned char *)0x5348\n\n#define TIM_IER_BIE (1 << 7)\n#define TIM_IER_TIE (1 << 6)\n#define TIM_IER_COMIE (1 << 5)\n#define TIM_IER_CC4IE (1 << 4)\n#define TIM_IER_CC3IE (1 << 3)\n#define TIM_IER_CC2IE (1 << 2)\n#define TIM_IER_CC1IE (1 << 1)\n#define TIM_IER_UIE (1 << 0)\n\n#define TIM_CR1_APRE (1 << 7)\n#define TIM_CR1_CMSH (1 << 6)\n#define TIM_CR1_CMSL (1 << 5)\n#define TIM_CR1_DIR (1 << 4)\n#define TIM_CR1_OPM (1 << 3)\n#define TIM_CR1_URS (1 << 2)\n#define TIM_CR1_UDIS (1 << 1)\n#define TIM_CR1_CEN (1 << 0)\n\n#define TIM_SR1_BIF (1 << 7)\n#define TIM_SR1_TIF (1 << 6)\n#define TIM_SR1_COMIF (1 << 5)\n#define TIM_SR1_CC4IF (1 << 4)\n#define TIM_SR1_CC3IF (1 << 3)\n#define TIM_SR1_CC2IF (1 << 2)\n#define TIM_SR1_CC1IF (1 << 1)\n#define TIM_SR1_UIF (1 << 0)\n\n/* SPI */\n#define SPI_CR1 *(volatile unsigned char *)0x5200\n#define SPI_CR2 *(volatile unsigned char *)0x5201\n#define SPI_ICR *(volatile unsigned char *)0x5202\n#define SPI_SR *(volatile unsigned char *)0x5203\n#define SPI_DR *(volatile unsigned char *)0x5204\n#define SPI_CRCPR *(volatile unsigned char *)0x5205\n#define SPI_RXCRCR *(volatile unsigned char *)0x5206\n#define SPI_TXCRCR *(volatile unsigned char *)0x5207\n\n#define SPI_CR1_LSBFIRST (1 << 7)\n#define SPI_CR1_SPE (1 << 6)\n#define SPI_CR1_BR(br) ((br) << 3)\n#define SPI_CR1_MSTR (1 << 2)\n#define SPI_CR1_CPOL (1 << 1)\n#define SPI_CR1_CPHA (1 << 0)\n\n#define SPI_CR2_BDM (1 << 7)\n#define SPI_CR2_BDOE (1 << 6)\n#define SPI_CR2_CRCEN (1 << 5)\n#define SPI_CR2_CRCNEXT (1 << 4)\n#define SPI_CR2_RXONLY (1 << 2)\n#define SPI_CR2_SSM (1 << 1)\n#define SPI_CR2_SSI (1 << 0)\n\n#define SPI_ICR_TXIE (1 << 7)\n#define SPI_ICR_RXIE (1 << 6)\n#define SPI_ICR_ERRIE (1 << 5)\n#define SPI_ICR_WKIE (1 << 4)\n\n#define SPI_SR_BSY (1 << 7)\n#define SPI_SR_OVR (1 << 6)\n#define SPI_SR_MODF (1 << 5)\n#define SPI_SR_CRCERR (1 << 4)\n#define SPI_SR_WKUP (1 << 3)\n#define SPI_SR_TXE (1 << 1)\n#define SPI_SR_RxNE (1 << 0)\n\n/* I2C */\n#define I2C_CR1 *(volatile unsigned char *)0x5210\n#define I2C_CR2 *(volatile unsigned char *)0x5211\n#define I2C_FREQR *(volatile unsigned char *)0x5212\n#define I2C_OARL *(volatile unsigned char *)0x5213\n#define I2C_OARH *(volatile unsigned char *)0x5214\n#define I2C_DR *(volatile unsigned char *)0x5216\n#define I2C_SR1 *(volatile unsigned char *)0x5217\n#define I2C_SR2 *(volatile unsigned char *)0x5218\n#define I2C_SR3 *(volatile unsigned char *)0x5219\n#define I2C_ITR *(volatile unsigned char *)0x521A\n#define I2C_CCRL *(volatile unsigned char *)0x521B\n#define I2C_CCRH *(volatile unsigned char *)0x521C\n#define I2C_TRISER *(volatile unsigned char *)0x521D\n#define I2C_PECR *(volatile unsigned char *)0x521E\n\n/* ADC */\n#define ADC_DBxR *(volatile unsigned char *)0x53E0\n#define ADC_CSR *(volatile unsigned char *)0x5400\n#define ADC_CR1 *(volatile unsigned char *)0x5401\n#define ADC_CR2 *(volatile unsigned char *)0x5402\n#define ADC_CR3 *(volatile unsigned char *)0x5403\n#define ADC_DRH *(volatile unsigned char *)0x5404\n#define ADC_DRL *(volatile unsigned char *)0x5405\n#define ADC_TDRH *(volatile unsigned char *)0x5406\n#define ADC_TDRL *(volatile unsigned char *)0x5407\n#define ADC_HTRH *(volatile unsigned char *)0x5408\n#define ADC_HTRL *(volatile unsigned char *)0x5409\n#define ADC_LTRH *(volatile unsigned char *)0x540A\n#define ADC_LTRL *(volatile unsigned char *)0x540B\n#define ADC_AWSRH *(volatile unsigned char *)0x540C\n#define ADC_AWSRL *(volatile unsigned char *)0x540D\n#define ADC_AWCRH *(volatile unsigned char *)0x540E\n#define ADC_AWCRL *(volatile unsigned char *)0x540F\n\n#define ADC_CSR_EOC (1 << 7)\n#define ADC_CSR_AWD (1 << 6)\n#define ADC_CSR_EOCIE (1 << 5)\n#define ADC_CSR_AWDIE (1 << 4)\n\n#define ADC_CR1_CONT (1 << 1)\n#define ADC_CR1_ADON (1 << 0)\n\n#define ADC_CR2_EXTTRIG (1 << 6)\n#define ADC_CR2_EXTSEL (1 << 4)\n#define ADC_CR2_ALIGN (1 << 3)\n#define ADC_CR2_SCAN (1 << 1)\n\n\n/* Interrupt commands */\n#define enableInterrupts()    {__asm__(\"rim\\n\");}  /* enable interrupts */\n#define disableInterrupts()   {__asm__(\"sim\\n\");}  /* disable interrupts */\n#define rim()                 {__asm__(\"rim\\n\");}  /* enable interrupts */\n#define sim()                 {__asm__(\"sim\\n\");}  /* disable interrupts */\n#define nop()                 {__asm__(\"nop\\n\");}  /* No Operation */\n#define trap()                {__asm__(\"trap\\n\");} /* Trap (soft IT) */\n#define wfi()                 {__asm__(\"wfi\\n\");}  /* Wait For Interrupt */\n#define halt()                {__asm__(\"halt\\n\");} /* Halt */\n\n/* Interrupt numbers */\n#define TIM1_OVR_UIF_IRQ 11\n#define TIM2_OVR_UIF_IRQ 13\n#define TIM3_OVR_UIF_IRQ 15\n#define ADC1_EOC_IRQ 22\n#define TIM4_OVR_UIF_IRQ 23\n/*\nInterrupts:\n0 TLI\n1 AWU Auto Wake up from Halt\n2 CLK Clock controller\n3 EXTI0 Port A external interrupts\n4 EXTI1 Port B external interrupts\n5 EXTI2 Port C external interrupts\n6 EXTI3 Port D external interrupts\n7 EXTI4 Port E external interrupts\n8 CAN CAN RX interrupt\n9 CAN CAN TX/ER/SC interrupt\n10 SPI End of Transfer\n11 TIM1 Update /Overflow/Underflow/Trigger/Break\n12 TIM1 Capture/Compare\n13 TIM2 Update /Overflow\n14 TIM2 Capture/Compare\n15 TIM3 Update /Overflow\n16 TIM3 Capture/Compare\n17 UART1 Tx complete\n18 UART1 Receive Register DATA FULL\n19 I2C I2C interrupt\n20 UART2/3 Tx complete\n21 UART2/3 Receive Register DATA FULL\n22 ADC End of Conversion\n23 TIM4 Update/Overflow\n24 FLASH EOP/WR_PG_DIS\nTLI 0\nAWU 1\nCLK 2\nEXTI_PORTA 3\nEXTI_PORTB 4\nEXTI_PORTC\nEXTI_PORTD\nEXTI_PORTE\nCAN_RX\nCAN_TX\nSPI\nTIM1_UPD_OVF_TRG_BRK\nTIM1_CAP_COM\nTIM2_UPD_OVF_BRK\nTIM2_CAP_COM\nTIM3_UPD_OVF_BRK\nTIM3_CAP_COM\nUART1_TX\nUART1_RX\nI2C 19\nADC1 22\nTIM4_UPD_OVF 23\nEEPROM_EEC 24\n*/\n\n#endif\n\n/* Build in LED is in pin B5 (STM8S103 board) or D3 (STM8S003F3 board) */\n#ifdef STM8S103\n#define LED_PORT    PB\n#define LED_PIN     PIN5\n#else\n#define LED_PORT    PD\n#define LED_PIN     PIN3\n#endif\n\n/* TIM2 Update/Overflow interrupt handling routine */\nvoid TIM2_update(void) __interrupt(TIM2_OVR_UIF_IRQ) {\n    // Blink internal LED. Port B (or D) output data register. Flip pin 5 (or 3)\n    PORT(LED_PORT, ODR) ^= LED_PIN;\n\n    // Clear Timer 2 Status Register 1 Update Interrupt Flag (UIF) (bit 0)\n    TIM2_SR1 &= ~TIM_SR1_UIF;\n}\n\nint main(void)\n{\n    /* Set clock to full speed (16 Mhz) */\n    CLK_CKDIVR = 0;\n\n    /* GPIO of LED pin setup */\n    // Set pin data direction as output\n    PORT(LED_PORT, DDR)  |= LED_PIN; // i.e. PB_DDR |= (1 << 5);\n    // Set pin as \"Push-pull\"\n    PORT(LED_PORT, CR1)  |= LED_PIN; // i.e. PB_CR1 |= (1 << 5);\n\n    /* TIM2 setup */\n    // Prescaler register\n    TIM2_PSCR = 14; // 2^14==16384, 16MHz/16384==976.5625 Hz\n    // set Counter Auto-Reload Registers - TIM2_ARR=977 == 0x03D1, about once per second\n    TIM2_ARRH = 0x03;\n    TIM2_ARRL = 0xd1;\n    // TIM2_IER (Interrupt Enable Register), Update interrupt (UIE) (bit 0)\n    TIM2_IER |= TIM_IER_UIE;\n    // TIM2_CR1 – Timer 2 Control Register 1, Counter ENable bit (CEN) (bit 0)\n    TIM2_CR1 |= TIM_CR1_CEN;\n\n    /* Loop infinitely waiting for an interrupt */\n        while(1) {\n        wfi();\n    }\n}\n"
    }
}
]
